name: Build and publish development Docker images
on:
  schedule:
    - cron: '0 10 * * *' # everyday at 10am
  push:
    branches:
      - dev
    tags:
      - "v*"
  pull_request:

jobs:
  # https://github.com/marketplace/actions/build-and-push-docker-images
  multi-registries:
    # Note: Because latter steps depends on the `dev` version of an earlier step
    # , if you cancel the GitHub Action workflow for dev, it's possible that
    # the resulting images might not be built from the latest base image.
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        # https://github.com/docker/setup-buildx-action#inputs
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2.1.4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.THINK_THEN_RANT_CONTAINER_REGISTRY_TOKEN }}

      - name: Docker meta for the ylc_base image
        # https://github.com/marketplace/actions/docker-meta#keep-up-to-date-with-github-dependabot
        id: docker_meta_ylc_base
        uses: crazy-max/ghaction-docker-meta@v3
        with:
          # list of Docker images to use as base name for tags
          images: thinkthenrant/development-container-base,ghcr.io/thinkthenrant/development-container-base
          tag-sha: true # add git short SHA as Docker tag
      - name: Build and push the ylc_base image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./essential/base/Dockerfile
          platforms: linux/amd64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta_ylc_base.outputs.tags }}
          labels: ${{ steps.docker_meta_ylc_base.outputs.labels }}

      - name: Docker meta for the ylc_rust image
        id: docker_meta_ylc_rust
        uses: crazy-max/ghaction-docker-meta@v3
        with:
          images: thinkthenrant/development-container-rust,ghcr.io/thinkthenrant/development-container-rust
          tag-sha: true
      - name: Build and push ylc_rust
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./essential/rust/Dockerfile
          platforms: linux/amd64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta_ylc_rust.outputs.tags }}
          labels: ${{ steps.docker_meta_ylc_rust.outputs.labels }}
      
      - name: Docker meta for the ylc_go image
        id: docker_meta_ylc_go
        uses: crazy-max/ghaction-docker-meta@v3
        with:
          images: thinkthenrant/development-container-go,ghcr.io/thinkthenrant/development-container-go
          tag-sha: true
      - name: Build and push ylc_go
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./essential/go/Dockerfile
          platforms: linux/amd64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta_ylc_go.outputs.tags }}
          labels: ${{ steps.docker_meta_ylc_go.outputs.labels }}
      
      - name: Docker meta for the ylc_cdk-go image
        id: docker_meta_ylc_cdk-go
        uses: crazy-max/ghaction-docker-meta@v3
        with:
          images: thinkthenrant/development-container_cdk-go,ghcr.io/thinkthenrant/development-container_cdk-go
          tag-sha: true
      - name: Build and push ylc_cdk-go
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./projects/cdk-go/Dockerfile
          platforms: linux/amd64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta_ylc_cdk-go.outputs.tags }}
          labels: ${{ steps.docker_meta_ylc_cdk-go.outputs.labels }}

      - name: Docker meta for the ylc_rust-lang_rust image
        id: docker_meta_ylc_rust-lang_rust
        uses: crazy-max/ghaction-docker-meta@v3
        with:
          images: thinkthenrant/development-container_rust-lang_rust,ghcr.io/thinkthenrant/development-container_rust-lang_rust
          tag-sha: true
      - name: Build and push ylc_rust-lang_rust
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./projects/rust-lang/rust/Dockerfile
          platforms: linux/amd64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta_ylc_rust-lang_rust.outputs.tags }}
          labels: ${{ steps.docker_meta_ylc_rust-lang_rust.outputs.labels }}

      ## This is taking too long to build and is unused. Commented out for now.
      # - name: Docker meta for the ylc_bottlerocket-os_bottlerocket image
      #   id: docker_meta_ylc_bottlerocket-os_bottlerocket
      #   uses: crazy-max/ghaction-docker-meta@v3
      #   with:
      #     images: thinkthenrant/development-container_bottlerocket-os_bottlerocket,ghcr.io/thinkthenrant/development-container_bottlerocket-os_bottlerocket
      #     tag-sha: true
      # - name: Build and push ylc_bottlerocket-os_bottlerocket
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: .
      #     file: ./projects/bottlerocket-os/bottlerocket/Dockerfile
      #     platforms: linux/amd64
      #     cache-from: type=local,src=/tmp/.buildx-cache
      #     cache-to: type=local,dest=/tmp/.buildx-cache
      #     push: ${{ github.event_name != 'pull_request' }}
      #     tags: ${{ steps.docker_meta_ylc_bottlerocket-os_bottlerocket.outputs.tags }}
      #     labels: ${{ steps.docker_meta_ylc_bottlerocket-os_bottlerocket.outputs.labels }}